class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
         double an=0;
        int i=0,j=0;
        vector<int>ans;
        int m=nums1.size();
        int n=nums2.size();
        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                ans.push_back(nums1[i]);
                i++;
            }
            else if(nums1[i]>nums2[j]){
                ans.push_back(nums2[j]);
                j++;
            }
            else{
                   ans.push_back(nums1[i]);
                ans.push_back(nums2[j]);
                i++;
                j++; 
            }
            
        }
        while(i<m){
             ans.push_back(nums1[i]);
             i++;
        }
    
        while(j<n){
             ans.push_back(nums2[j]);
             j++;
        }
        int size=m+n;
        if(size%2 == 0){
             an=(ans[(size/2)-1]+ans[size/2])/2.0;
        }
        else{
            an=ans[size/2];
        }
        return an;
    }
};
